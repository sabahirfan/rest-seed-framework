plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
    id 'org.sonarqube' version '6.0.1.5171'
    id 'checkstyle'
}

group = 'com.dtg.alpha'
version = '1.0.0'
archivesBaseName = 'rest-seed-framework'

java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // Core dependencies
    implementation 'io.rest-assured:rest-assured:5.3.2'
    implementation 'io.rest-assured:json-path:5.3.2'
    implementation 'io.rest-assured:xml-path:5.3.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'org.springframework:spring-core:6.1.5'
    implementation 'org.springframework:spring-context:6.1.5'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    implementation 'org.hamcrest:hamcrest:2.2'
    
    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
    testImplementation 'ch.qos.logback:logback-classic:1.5.3'
    
    // Lombok for reducing boilerplate
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
    // Skip tests for now
    enabled = false
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

jacocoTestReport {
    dependsOn test
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            pom {
                name = 'REST Seed Framework'
                description = 'A reusable framework for seeding test data to REST APIs in Java-based test automation projects'
                url = 'https://github.com/yourorganization/rest-seed-framework'
                
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                
                developers {
                    developer {
                        id = 'dtg'
                        name = 'DTG'
                        email = 'dtg@example.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/yourorganization/rest-seed-framework.git'
                    developerConnection = 'scm:git:ssh://github.com/yourorganization/rest-seed-framework.git'
                    url = 'https://github.com/yourorganization/rest-seed-framework'
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/yourorganization/rest-seed-framework")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
        
        // Local Maven repository for testing
        mavenLocal()
    }
}

checkstyle {
    toolVersion = '10.3.4'
    configFile = file("config/checkstyle/checkstyle.xml")
    configProperties = [
        'basedir': project.projectDir
    ]
    showViolations = true
    ignoreFailures = true
}

// Define a specific task for quick installation to local Maven repository
task installToLocalMaven(dependsOn: publishToMavenLocal) {
    group = 'publishing'
    description = 'Installs the JAR to the local Maven repository'
}